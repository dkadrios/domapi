<html><head><title>DomAPI Docs - Tutorial - XUL Reader</title><link rel="stylesheet" type="text/css" href="../docs/bin/style.css"></head><body><div id="logo"><a href="http://domapi.com"><img src="../docs/bin/logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="../docs/bin/left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="tutor_index.htm"><img src="../docs/bin/up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="tutor_index.htm">Up to index</a><h3>DomAPI Tutorial</h3><div class="tutorNavBlock"><a href="tutor_38.htm"><img src="../docs/bin/left.gif" alt="Back" width="14" height="14" border="0"></a><a href="tutor_38.htm" title="Back">XMLCore</a> &nbsp;&nbsp;&nbsp; <a href="tutor_index.htm"><img src="../docs/bin/up.gif" alt="Up to index" width="14" height="14" border="0"></a> &nbsp;&nbsp;&nbsp; <a href="tutor_16.htm" title="Next">Label</a><a href="tutor_16.htm"><img src="../docs/bin/right.gif" alt="Next" width="14" height="14" border="0"></a></div><h3>XUL Reader</h3><p class="tutorAuthor"> Author: <b>Patrice Fricard</b><br /><span style="font-size:smaller">Modified: 10/24/2004</span></p><h4>XulReader presentation</h4><h4>Presentation</h4><p> First of all what is XUL (pronounce "zool"): it's a markup language to describe user interface. This language should be familiar for Moz developpers. If you want more details on it, go to <a href="www.xulplanet.com" target="_blank">xulplanet.com</a>.<br/> XulReader is a Domapi Object that will parse an XML document and create corresponding interface elements.<br/></p><h4>Pre-requisite</h4><pre class="code">core.loadUnit("xulreader")</pre><h4>Loading Xml</h4> The xml could be pass to the reader using three differents arguments: <ul><li><i>uri</i>: an URL where the XUL document is stored (could be a dynamic server page)</li><li><i>xmlnode</i>: a root node of the XUL document (should be a &lt;window&gt; tag)</li><li><i>xmlstr</i>: an xml string</li></ul> The corresponding declarations: <pre class="code">xrdr = domapi.XulReader({x:&lt;i&gt;x_position&lt;/i&gt;,y:&lt;i&gt;y_position&lt;/i&gt;,uri:&lt;i&gt;src_url&lt;/i&gt;});
...
xrdr = domapi.XulReader({x:&lt;i&gt;x_position&lt;/i&gt;,y:&lt;i&gt;y_position&lt;/i&gt;,uri:&lt;i&gt;xml_node&lt;/i&gt;});
...
xrdr = domapi.XulReader({parent:&lt;i&gt;domapi_element&lt;/i&gt;,xmlstr:&lt;i&gt;"&lt;window&gt;an xml string&lt;/window&gt;"&lt;/i&gt;});</pre> As you can see, you can provide a positioning or directly a container. If there is no parent, the reader will create a window which will be automatically resized to fit the content. Providing the width and height for window is not required as you can specify those properties in attributes of the root node.<br/> Look the example's codes included in the Domapi distribution. <h4>Create a calculator</h4> Now that you know how to declare the reader, we will build our first application.<br/> In XUL, the common way to manage element positioning is using the box model (<a href="http://xulplanet.com/tutorials/xultu/boxes.html" target="_blank">Xul: The Box Model</a>).<br/> A calculator will have 3 zones: <ul><li>1st: calculation field</li><li>2nd: command area</li><li>3rd: buttons area</li></ul> We will use a "vbox" that render the sub elements from top to bottom. <pre class="code">&lt;window id="calculator" title="Domapi calculator"&gt;
&lt;vbox&gt;
&lt;hbox&gt;Input field zone&lt;/hbox&gt;
&lt;hbox&gt;Commands area&lt;/hbox&gt;
&lt;hbox&gt;Buttons area&lt;/hbox&gt;
&lt;/vbox&gt;
&lt;/window&gt;</pre> It's far from the target. We add the elements. <pre class="code">&lt;window id="calculator" title="Domapi calculator"&gt;
&lt;vbox&gt;
&lt;hbox&gt;&lt;textbox id="calcField"/&gt;&lt;/hbox&gt;
&lt;hbox&gt;&lt;button label="C" id="reset"/&gt;&lt;/hbox&gt;
&lt;vbox&gt;
 &lt;hbox&gt;
  &lt;button label="7" id="b7"/&gt;
  &lt;button label="8" id="b8"/&gt;
  &lt;button label="9" id="b9"/&gt;
  &lt;button label="/" id="bDiv"/&gt;
  &lt;button label="Rac" id="bRac"/&gt;
 &lt;/hbox&gt;
 &lt;hbox&gt;
  &lt;button label="4" id="b4"/&gt;
  &lt;button label="5" id="b5"/&gt;
  &lt;button label="6" id="b6"/&gt;
  &lt;button label="*" id="bMulti"/&gt;
  &lt;button label="%" id="bPercent"/&gt;
 &lt;/hbox&gt;
  &lt;hbox&gt;
  &lt;button label="1" id="b1"/&gt;
  &lt;button label="2" id="b2"/&gt;
  &lt;button label="3" id="b3"/&gt;
  &lt;button label="-" id="bSub"/&gt;
  &lt;button label="1/x" id="bInv"/&gt;
 &lt;/hbox&gt;
 &lt;hbox&gt;
  &lt;button label="0" id="b0"/&gt;
  &lt;button label="+/-" id="bSign"/&gt;
  &lt;button label="," id="bSep"/&gt;
  &lt;button label="+" id="bAdd"/&gt;
  &lt;button label="=" id="bEqual"/&gt;
 &lt;/hbox&gt;
&lt;/vbox&gt;
&lt;/vbox&gt;
&lt;/window&gt;</pre> There are some visual problems that we need to fix: <ul><li>input field should fill all the box => flex attribute to 1 </li><li>background of the command zone should be the same than the button=> style attribute of hbox</li><li>the reset button should be align to the right => align attribute of hbox to "end"</li><li>button should have the same width=> set a width attribute for all buttons</li></ul><pre class="code">&lt;?xml version="1.0"?&gt;
&lt;window id="calculator" title="Domapi calculator"&gt;
&lt;vbox&gt;
&lt;hbox&gt;&lt;textbox id="calcField" flex="1"/&gt;&lt;/hbox&gt;
&lt;hbox align="end" style="background-color:buttonface"&gt;&lt;button label="C" id="reset" width="40"/&gt;&lt;/hbox&gt;
&lt;vbox&gt;
 &lt;hbox&gt;
  &lt;button label="7" id="b7" width="40"/&gt;
  &lt;button label="8" id="b8" width="40"/&gt;
  &lt;button label="9" id="b9" width="40"/&gt;
  &lt;button label="/" id="bDiv" width="40"/&gt;
  &lt;button label="Rac" id="bRac" width="40"/&gt;
 &lt;/hbox&gt;
 &lt;hbox&gt;
  &lt;button label="4" id="b4" width="40"/&gt;
  &lt;button label="5" id="b5" width="40"/&gt;
  &lt;button label="6" id="b6" width="40"/&gt;
  &lt;button label="*" id="bMulti" width="40"/&gt;
  &lt;button label="%" id="bPercent" width="40"/&gt;
 &lt;/hbox&gt;
  &lt;hbox&gt;
  &lt;button label="1" id="b1" width="40"/&gt;
  &lt;button label="2" id="b2" width="40"/&gt;
  &lt;button label="3" id="b3" width="40"/&gt;
  &lt;button label="-" id="bSub" width="40"/&gt;
  &lt;button label="1/x" id="bInv" width="40"/&gt;
 &lt;/hbox&gt;
 &lt;hbox&gt;
  &lt;button label="0" id="b0" width="40"/&gt;
  &lt;button label="+/-" id="bSign" width="40"/&gt;
  &lt;button label="," id="bSep" width="40"/&gt;
  &lt;button label="+" id="bAdd" width="40"/&gt;
  &lt;button label="=" id="bEqual" width="40"/&gt;
 &lt;/hbox&gt;
&lt;/vbox&gt;
&lt;/vbox&gt;
&lt;/window&gt;</pre> The GUI is ready to be loaded by javascript.XUL document is stored in an external file named "xulcalc.xml". HTML page code: <pre class="code">&lt;html&gt;
&lt;head&gt;
  &lt;meta http-equiv="Content-splittersplitterType" content="text/html; charset=utf-8"&gt;
  &lt;title&gt;XulCalc Example&lt;/title&gt;
  &lt;script type="text/javascript" src="../../src/domapi.js"&gt;&lt;/script&gt;
  &lt;script type="text/javascript"&gt;
   domapi.loadUnit("thirdparty/pfricard/xulreader");
   onload=function(){
    xcalc = domapi.XulReader({x:250,y:30,uri:"../bin/xulcalc.xml"});
   };
  &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;</pre><h4>How to access element declared by the XulReader object</h4><ul><li>document.getElementById("<i>id_set_in_attribute_id</i>")</li><li>xreader_object["<i>id_set_in_attribute_id</i>"] (ie in previous application xcalc["b1"] is a pointer to the button [1] component).</li></ul><h4>Conclusion</h4> XUL is a really fast mean to create web application.<br/> XulReader object doesn't read all XUL element with all attributes.<br/> But as Domapi have a correspondence for almost all XUL element, XulReader would be very close , for GUI creation, to the classic Mozilla engine(but never better;).<br /><br /><div class="tutorNavBlock"><a href="tutor_38.htm"><img src="../docs/bin/left.gif" alt="Back" width="14" height="14" border="0"></a><a href="tutor_38.htm" title="Back">XMLCore</a> &nbsp;&nbsp;&nbsp; <a href="tutor_index.htm"><img src="../docs/bin/up.gif" alt="Up to index" width="14" height="14" border="0"></a> &nbsp;&nbsp;&nbsp; <a href="tutor_16.htm" title="Next">Label</a><a href="tutor_16.htm"><img src="../docs/bin/right.gif" alt="Next" width="14" height="14" border="0"></a></div><hr />  </body></html>
