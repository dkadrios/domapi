<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Popupmenu</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Popupmenu</h2> See also: <a href="obj_19.htm">Elm</a><br /> See also: <a href="obj_48.htm">Component</a><br /><p> This component is used as the dropdown menus in MenuBar. It can also be used as a stand-alone popup menu. Supports infinite cascading submenus, images, drop-shadows, checked items and radio items. </p><p> &nbsp; </p><hr /><h3 style="margin-top:0px !important">Constructor Parameters unique to domapi.Popupmenu</h3><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th></tr><tr><td class="nm">chevron</td><td>String</td><td>&amp;#9654; (unicode for &#9654;)&nbsp;</td><td> This is the icon that will be displayed when a menuitem has a submenu that can be displayed. </td></tr><tr><td class="nm">doShadows</td><td>boolean</td><td>true&nbsp;</td><td> &nbsp; </td></tr></table><span style="margin-left:20px;font-size:smaller"> You can also use <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a> constructor parameters when creating a <span class="inlinecode">domapi.Popupmenu</span> instance. </span><hr /><a name="contents">&nbsp;</a><h4>Events unique to domapi.Popupmenu</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#847">onselect</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Popupmenu also has the same events as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Methods unique to domapi.Popupmenu</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#1182">addChildMenu</a></li><li><a href="#746">addItem</a></li><li><a href="#747">addSeparator</a></li><li><a href="#1176">attach</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /></li><li><a href="#1175">closeMenus</a></li><li><a href="#1173">getText</a></li><li><a href="#1179">hideItem</a></li><li><a href="#1181">loadFromJson</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /></li><li><a href="#1178">setChecked</a></li><li><a href="#1177">setEnabled</a></li><li><a href="#1172">setImage</a></li><li><a href="#1174">setText</a></li><li><a href="#1180">showItem</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Popupmenu also has the same methods as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Properties unique to domapi.Popupmenu</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#306">chevron</a></li><li><a href="#305">items</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Popupmenu also has the same properties as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><hr /><div class="prop_group_title">Events</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="847">onselect ()</a></th></tr></table><p> This event fires after the user has selected a menu item and just before <span class=inlinecode>fn</span> is evaluated.<br><span class=inlinecode>item</span> is a pointer to the item that has clicked. </p></div><a href="#contents">back to top</a><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1182">addChildMenu( arg )</a></th><td>type : Object</td></tr></table><p class="constructorNotice"> The "arg" parameter fed to this method is an inline Object. See below for accepted parameters.<br /><span>Any parameters not listed here that you add may also be attached to any returned Object.</span></p><p> Creates a cascading childmenu for a specified menuitem. This method returns a reference to this new childMenu, which can then be used to add more items to. </p><h5>Available "arg" Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">parent</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Menuitem to add the child to. Can be either a reference or an index. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="746">addItem( arg )</a></th><td>type : Object</td></tr></table><p class="constructorNotice"> The "arg" parameter fed to this method is an inline Object. See below for accepted parameters.<br /><span>Any parameters not listed here that you add may also be attached to any returned Object.</span></p><p> Adds a brand new item to the menu. <span class=inlinecode>text</span> if the text that will be displayed and <span class=inlinecode>onclick</span> is some optional Javascript to perform should the user select the item.<br /> Returns a reference to the new item. </p><h5>Example:</h5><pre class="code">
menu1.addItem({text:"Exit", onclick:myFunc, name:"item1"});
menu1.setChecked(menu1.item1);</pre><h5>Available "arg" Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">text</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> Displayed text &nbsp; </td></tr><tr><td class="nm">img</td><td>String</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Path of the image to be used. This can be an Imagelist, with enabled and disabled images. &nbsp; </td></tr><tr><td class="nm">name</td><td>String</td><td class="opt">&nbsp;</td><td>miCamelCased name&nbsp;</td><td> When menuitems are named, you can then refer to them directly through the Popupmenu using dot notation. Defaults to a camel-case version of the <span class="inlinecode">text</span> property. &nbsp; </td></tr><tr><td class="nm">visible</td><td>boolean</td><td class="opt">&nbsp;</td><td>true&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">enabled</td><td>boolean</td><td class="opt">&nbsp;</td><td>true&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">imgW</td><td>integer</td><td class="opt">&nbsp;</td><td>16&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">imgH</td><td>integer</td><td class="opt">&nbsp;</td><td>16&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">checked</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> Determines whether a checkbox appears next to the menuitem. Cannot be used with images. &nbsp; </td></tr><tr><td class="nm">autoCheck</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> Allows an item to be toggled on and off by the user. Use the <span class="inlinecode">checked</span> property to control the initial state. &nbsp; </td></tr><tr><td class="nm">radioGroup</td><td>integer</td><td class="opt">&nbsp;</td><td>null&nbsp;</td><td> If numerous items are given the same radioGroup number, they function as a set of radiobuttons. You can pass <span class="inlinecode">checked</span> to one of them to set the intial state. Cannot be used with images. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="747">addSeparator ()</a></th><td>type : HTMLElement</td></tr></table><p> Adds a new separator to the menu and returns a reference to it. </p><h5>Example:</h5><pre class="code">
// add a separator line
menu1.addSeparator();</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1176">attach ()</a></th></tr></table><p> Makes this menu the context menu for the specified element. </p><h5>Example:</h5><pre class="code">
menu1.attach(domapi.getElm("id"));</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1175">closeMenus ()</a></th></tr></table><p> Closes all childMenus owned by any items in this menu. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1173">getText ( i )</a></th><td>type : String</td></tr></table><p> Returns the text of a menuitem. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Item reference or index. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1179">hideItem ( i )</a></th></tr></table><p> &nbsp; </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Item reference or index. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1181">loadFromJson ( json )</a></th></tr></table><p> Populates the menu via a specially structured Javascript object. </p><h5>Example:</h5><pre class="code">
var jsonString = {
  doImages:true,
  items:[
    {text:"Clear Text",onselect:"elm2.setText('')", img:"delete.gif", enabled:false},
    {text:"Set Text",  onselect:"getNewText()",     img:"edit.gif"},
    {type:"separator"},
    {text:"Background", onselect:pickBgColor, childMenu:{
        items:[
          {text:"Red",   radioGroup:1},
          {text:"White", radioGroup:1, checked:true},
          {text:"Blue",  radioGroup:1}
        ]
      }
    },
    {text:"Foreground", onselect:pickFgColor, childMenu:{
        items:[
          {text:"Red",   radioGroup:1},
          {text:"White", radioGroup:1},
          {text:"Blue",  radioGroup:1},
          {text:"Black", radioGroup:1, checked:true}
        ]
      }
    },
    {text:"shouldn't see me"},
    {text:"...or me", visible:false},
    {text:"disabled", enabled:false}
  ]
};
menu1.loadFromJson(jsonString);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">json</td><td>Object</td><td class="opt">Y</td><td>&nbsp;</td><td> The JSON object. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1178">setChecked ( i, b )</a></th></tr></table><p> Sets the 'checked' flag for a given item. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Item reference or index. &nbsp; </td></tr><tr><td class="nm">b</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> true/false value &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1177">setEnabled ( i, b )</a></th></tr></table><p> Enables/disables an item. </p><h5>Example:</h5><pre class="code">
menu1.setEnabled(menu1.itemName, true);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Item reference or index. &nbsp; </td></tr><tr><td class="nm">b</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> true/false value &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1172">setImage ( i, src )</a></th></tr></table><p> Changes the src of a given menuitem's image. </p><h5>Example:</h5><pre class="code">
menu1.setImage(menu1.item1, 'image.gif');</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Item reference or index. &nbsp; </td></tr><tr><td class="nm">src</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> Image src. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1174">setText ( i, text )</a></th></tr></table><p> Sets the text of a menuitem. </p><h5>Example:</h5><pre class="code">
menu1.setText(2, "new text");</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Item reference or index. &nbsp; </td></tr><tr><td class="nm">text</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> New text. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1180">showItem ( i )</a></th></tr></table><p> &nbsp; </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> Item reference or index. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="306">chevron</a></th><td>type : String</td><td>default value : &amp;#9654; (unicode for &#9654;)</td></tr></table><p> This is the icon that will be displayed when a menuitem has a submenu that can be displayed. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="305">items</a></th><td>type : Collection</td></tr></table><p> Each item that is added shows up in this collection. </p></div><a href="#contents">back to top</a><hr />  </body></html>
