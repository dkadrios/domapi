<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Toolbar</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Toolbar</h2> See also: <a href="obj_19.htm">Elm</a><br /> See also: <a href="obj_48.htm">Component</a><br /><p> Functions as a container for <a href="../bin/obj_37.htm">Speedbutton</a>s<!-- Speedbutton --> or whatever else you can cram into it ;) Supports automatic flowing of child elements. </p><p><h3>Toolbar is a simple panel</h3> The toolbar component has very few added properties or methods. It is simply a container for <a href="../bin/obj_37.htm">Speedbutton</a>s <!-- Speedbutton --> or any other element. By default it will render itself as a 26px high raised panel. You can modify its appearence through the standard DomAPI routines or through its constructor. Omit the <span class="inlinecode">w</span> property of the construct to have the Toolbar stretch across its parent container. <h3>Helper Functions</h3> The two helper functions <a href="../bin/obj_41.htm#762">spaceControls</a><!-- Toolbar.spaceControls --> and <a href="../bin/obj_41.htm#761">addSpacer</a><!-- Toolbar.addSpacer --> help out with laying out controls. There are no functions to add buttons, you simply use the Toolbar as the parent for any you create normally.<br /><br /> When adding many buttons to a toolbar, it isn't nescessary to provide absolute coordinates for each one. You can simply add them all in the order you want them displayed, and then make a call to <a href="../bin/obj_41.htm#762">spaceControls</a><!-- Toolbar.spaceControls --> which will automatically flow them across the control.<br /> To create logical groupings of controls, use <a href="../bin/obj_41.htm#761">addSpacer</a><!-- Toolbar.addSpacer --> to add in dividers.<br /><br /> Example: <pre class="code">&lt;script src="../src/domapi.js"&gt;&lt;/script&gt;
&lt;script&gt;
   domapi.loadUnit("speedbutton");
   domapi.loadUnit("toolbar");
   onload = function() {
     toolbar1 = domapi.Toolbar({});
     newBtn1   = domapi.Speedbutton({parent:toolbar1, src:"../bin/new.gif",   hint:"New",   onclick:myClick});
     openBtn1  = domapi.Speedbutton({parent:toolbar1, src:"../bin/open.gif",  hint:"Open",  onclick:myClick});
     toolbar1.addSpacer();
     saveBtn1  = domapi.Speedbutton({parent:toolbar1, src:"../bin/save.gif",  hint:"Save",  onclick:myClick});
     printBtn1 = domapi.Speedbutton({parent:toolbar1, src:"../bin/print.gif", hint:"Print", onclick:myClick});
     toolbar1.spaceControls();
  };
  function myClick(E){
    alert("You clicked the '" + this.hint + "' button.");
  };
&lt;/script&gt;</pre></p><hr /><h3 style="margin-top:0px !important">Constructor Parameters unique to domapi.Toolbar</h3><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th></tr><tr><td class="nm">edgeBorderLeft</td><td>integer</td><td>3&nbsp;</td><td> Amount of left-padding. Controls the space to the left of the first button. </td></tr><tr><td class="nm">edgeBorderTop</td><td>integer</td><td>3&nbsp;</td><td> Amount of top-padding. Controls the space above the buttons. </td></tr><tr><td class="nm">spacing</td><td>integer</td><td>2&nbsp;</td><td> Amount of space to place between each button. </td></tr></table><span style="margin-left:20px;font-size:smaller"> You can also use <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a> constructor parameters when creating a <span class="inlinecode">domapi.Toolbar</span> instance. </span><hr /><a name="contents">&nbsp;</a><h4>Methods unique to domapi.Toolbar</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#761">addSpacer</a></li><li><a href="#762">spaceControls</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Toolbar also has the same methods as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><hr /><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="761">addSpacer ()</a></th></tr></table><p> This function will add a divider after the last button or Elm in the toolbar. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="762">spaceControls ()</a></th></tr></table><p> This function will automatically flow all the child nodes of the toolbar from left to right. Call it after you've added any new buttons or spacers. </p></div><a href="#contents">back to top</a><hr />  </body></html>
