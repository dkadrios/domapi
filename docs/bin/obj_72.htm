<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.List</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.List</h2><p> &nbsp; </p><p> Handy object for dealing with <span class="inlinecode">name=value</span> pairs. </p><hr /><a name="contents">&nbsp;</a><h4>Methods unique to domapi.List</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#898">add</a></li><li><a href="#896">clear</a></li><li><a href="#900">deleteItem</a></li><li><a href="#905">findNameByValue</a></li><li><a href="#906">findValueByName</a></li><li><a href="#899">insert</a></li><li><a href="#1103">loadFromForm</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /></li><li><a href="#909">loadFromSelect</a></li><li><a href="#907">loadFromString</a></li><li><a href="#911">loadFromURLParams</a></li><li><a href="#902">reverse</a></li><li><a href="#910">saveToSelect</a></li><li><a href="#908">saveToString</a></li><li><a href="#912">saveToXML</a></li><li><a href="#903">sortByName</a></li><li><a href="#904">sortByValue</a></li><li><a href="#901">swapItems</a></li></ul></td></tr></table><h4>Properties unique to domapi.List</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#913">names</a></li><li><a href="#914">values</a></li></ul></td></tr></table><hr /><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="898">add ( name, value )</a></th></tr></table><p> Adds a value pair to the end of the list.<br /> If only the <span class="inlinecode">name</span> is provided, it is used in place of the <span class="inlinecode">value</span> as well.<br /> If only the <span class="inlinecode">name</span> is provided and it contains a "=", then it is assumed to be in the form "<span class="inlinecode">name=value</span>" and the two sides are split apart. </p><h5>Example:</h5><pre class="code">
var myList = List();
myList.add("item1=dog");
myList.add("item1", "dog");  // same thing
myList.add("item2"); // both name and value would be "item2"</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">name</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">value</td><td>variant</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#899">insert</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="896">clear ()</a></th></tr></table><p> This method empties the list. </p><h5>Example:</h5><pre class="code">
myList.clear();</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="900">deleteItem ( index )</a></th></tr></table><p> Deletes the value pair at the given index. </p><h5>Example:</h5><pre class="code">
myList.deleteItem(3); // deletes 4th item (index is zero based)</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="905">findNameByValue ( value )</a></th></tr></table><p> Attempts to locate a a name/value pair that matches the given <span class="inlinecode">value</span>. If found, returns the <span class="inlinecode">name</span> half, otherwise returns <span class="inlinecode">null</span>. </p><h5>Example:</h5><pre class="code">
myList.add( "item1", "dog");
myList.add( "item2", "cat");
myList.add( "item3", "bird");

var i = myList.findNameByValue("cat");</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#906">findValueByName</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="906">findValueByName ()</a></th></tr></table><p> Attempts to locate a a name/value pair that matches the given <span class="inlinecode">name</span>. If found, returns the <span class="inlinecode">value</span> half, otherwise returns <span class="inlinecode">null</span>. </p><h5>Example:</h5><pre class="code">
myList.add( "item1", "dog");
myList.add( "item2", "cat");
myList.add( "item3", "bird");

var i = myList.findValueByName("item2");</pre><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#905">findNameByValue</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="899">insert ( index, name, value )</a></th></tr></table><p> Inserts the given values at the specified index.<br /> Uses the same rules as <span class="inlinecode">add()</span>. </p><h5>Example:</h5><pre class="code">
myList.insert(3, "name=value");
myList.insert(3, "name", "value");</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">name</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">value</td><td>variant</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#898">add</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1103">loadFromForm ( form, append )</a></th></tr></table><p> Loads every form control's <span class="inlinecode">name </span>and <span class="inlinecode">value </span>to the list. If any of the form elements are <span class="inlinecode">SELECT</span>s, each <span class="inlinecode">OPTION </span>is also added. </p><h5>Example:</h5><pre class="code">
myList.loadFromForm(document.form1);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">form</td><td>HTMLElement</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">append</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="909">loadFromSelect ( select, append )</a></th></tr></table><p> Populates the list from a <span class="inlinecode">&lt;select&gt;</span> tag. Uses the name/value pairs of the select's <span class="inlinecode">options</span>.<br /> If <span class="inlinecode">append</span> is true, the list is not cleared first. (default is <span class="inlinecode">false</span>) </p><h5>Example:</h5><pre class="code">
myList.loadFromSelect(document.form1.select1);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">select</td><td>HTMLElement</td><td class="opt">Y</td><td>&nbsp;</td><td> The select box. ie: document.form1.select1 &nbsp; </td></tr><tr><td class="nm">append</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> If <span class="inlinecode">false</span>, the list is cleared first, otherwise content is added to the list. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#910">saveToSelect</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="907">loadFromString ( values, lineDelimiter, valueDelimiter )</a></th></tr></table><p> Populates the list contents from a provided string using the given delimiters. If not provided, the delimiters default to "\n" and "=", respectively. For example, a string such as this can be used to populate the list:<br /><span class="inlinecode">dog=bark</span><br /><span class="inlinecode">cat=meow</span><br /><span class="inlinecode">cow=moo</span><br /><span class="inlinecode">bird=chirp</span><br /><br /> If <span class="inlinecode">append</span> is true, the list is not cleared first. (default is <span class="inlinecode">false</span>) </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">values</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">lineDelimiter</td><td>String</td><td class="opt">&nbsp;</td><td>\n&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">valueDelimiter</td><td>String</td><td class="opt">&nbsp;</td><td>=&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#908">saveToString</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="911">loadFromURLParams ( append )</a></th></tr></table><p> Attempts to populate the list using whatever URL parameters were used to launch the page. For instance,<br /><span class="inlinecode">http://www.domapi.com?dog=bark&cat=meow</span><br /> If <span class="inlinecode">loadFromURLParams()</span> was called, it would result in the list containing the two name/value pairs provided.<br /> If <span class="inlinecode">append</span> is true, the list is not cleared first. (default is <span class="inlinecode">false</span>) </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">append</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="902">reverse ()</a></th></tr></table><p> Reverses the order of the entire list. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="910">saveToSelect ( select, append )</a></th></tr></table><p> Populates a <span class="inlinecode">&lt;select&gt;</span> tag's <span class="inlinecode">options</span> using the list's name/value pairs.<br /> If <span class="inlinecode">append</span> is true, the list is not cleared first. (default is <span class="inlinecode">false</span>) </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">select</td><td>HTMLElement</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">append</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#909">loadFromSelect</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="908">saveToString ( lineDelimiter, valueDelimiter, doEscape )</a></th></tr></table><p> Serializes the list's content into a single string. If not provided, the delimiters default to "\n" and "=", respectively. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">lineDelimiter</td><td>String</td><td class="opt">&nbsp;</td><td>\n&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">valueDelimiter</td><td>String</td><td class="opt">&nbsp;</td><td>=&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">doEscape</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#907">loadFromString</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="912">saveToXML ( rootNodeName, makePretty )</a></th></tr></table><p> No documentation has been finalized. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">rootNodeName</td><td>String</td><td class="opt">&nbsp;</td><td>List&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">makePretty</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="903">sortByName ()</a></th></tr></table><p> Sorts the name/value pairs by name. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#904">sortByValue</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="904">sortByValue ()</a></th></tr></table><p> Sorts the name/value pairs by value. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#903">sortByName</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="901">swapItems ( index1, index2 )</a></th></tr></table><p> Swaps out the value pairs for the two indexes provided. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index1</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">index2</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="913">names</a></th><td>type : Array</td></tr></table><p> All the <span class="inlinecode">names</span> of the name/value pairs are stored here. You should not access these directly, but rather should use the Object's methods. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#914">values</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="914">values</a></th><td>type : Array</td></tr></table><p> All the <span class="inlinecode">values</span> of the name/value pairs are stored here. You should not access these directly, but rather should use the Object's methods. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=72#913">names</a></td></tr></table></div><a href="#contents">back to top</a><hr />  </body></html>
