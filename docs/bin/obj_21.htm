<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Imagelist</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Imagelist</h2> See also: <a href="obj_48.htm">Component</a><br /><p> Given an imagestrip of same-size images, this control manages displaying of individual ones by index. Extremely useful for image roll-overs or whenever the need arises for a graphic that can change it's appearence without the need for caching. </p><p> An Imagelist creates a new <span class="inlinecode">Image</span> object and inserts it positioned statically into the provided parent element.<br /> This is a special image in that it is actually a long strip of smaller individual images, each of which can be displayed by itself.<br /> For example, here is an image strip that contains various images for a Tree:<br /><br /><div style="width:500px;text-align:center"><img src="../bin/win98tree.gif" border=1 /><br /><cite style="color:gray">border added for display</cite></div><br /> It consists of 20 16x16 images (some of which are blank). To create an <span class="inlinecode">Imagelist</span> component out of this graphic, the following command is issued:<br /><span class="inlinecode">elm1 = domapi.Imagelist({parent:getElm("div1"), src:"gui.gif", w:16, h:16});</span><br /><br /> This creates and inserts the imagelist into <span class="inlinecode">div1</span>. The image is only the size of one individual image (16x16 in this case) and is positioned relatively like a <span class="inlinecode">SPAN</span>. <br /><br /> By default the image displayed is the first one in the strip. To display another, you use the <a href="../bin/obj_21.htm#822">setIndex</a><!-- Imagelist.setIndex --> method. Image indexes start from zero, so to display the closed folder from the above image, you would call:<br /><span class="inlinecode">elm1.setImage(10);</span><br /> That would change the image look to <img src="../bin/folder.gif" border=1 /><br /><br /> Each <span class="inlinecode">Imagelist</span> has an <a href="../bin/obj_21.htm#406">index</a><!-- Imagelist.index --> property that is read-only. Use this to determine which image is being displayed.<br /><br /><span class="inlinecode">Imagelists</span> are very powerful when used in components as they drastically reduce network traffic and speed up initial rendering of your pages. They can also be used for image rollovers. Instead of having to pre-cache the images, you can use an <span class="inlinecode">Imagelist</span> and simple call <span class="inlinecode">setImage()</span> to rotate the images. The <a href="../bin/obj_33.htm">Rollover</a><!-- Rollover --> component is a good example of using Imagelists for image rollovers. </p><hr /><h3 style="margin-top:0px !important">Constructor Parameters unique to domapi.Imagelist</h3><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th></tr><tr><td class="nm">h</td><td>integer</td><td>16&nbsp;</td><td> height of individual images </td></tr><tr><td class="nm">orientation</td><td>String</td><td>horizontal&nbsp;</td><td> The images in the list can either be arranged horizontally or vertically. Accepted values are <span class="inlinecode">horizontal</span> and <span class="inlinecode">vertical</span>. </td></tr><tr><td class="nm">src</td><td>String</td><td>&nbsp;</td><td> the image path and name </td></tr><tr><td class="nm">w</td><td>integer</td><td>16&nbsp;</td><td> width of individual images </td></tr></table><span style="margin-left:20px;font-size:smaller"> You can also use <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a> constructor parameters when creating a <span class="inlinecode">domapi.Imagelist</span> instance. </span><hr /><a name="contents">&nbsp;</a><h4>Methods unique to domapi.Imagelist</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#822">setIndex</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Imagelist also has the same methods as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Properties unique to domapi.Imagelist</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#406">index</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Imagelist also has the same properties as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><hr /><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="822">setIndex ( index )</a></th></tr></table><p> This method switches the display to to the image located at the specified index.<br /> Image indexes start from zero. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="406">index</a></th><td>type : integer</td><td>default value : 0</td></tr></table><p> Read-only.<br /> Currently displayed image index. </p></div><a href="#contents">back to top</a><hr />  </body></html>
