<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.color</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.color</h2><p> The <span class="inlinecode">color</span> unit extends the <span class="inlinecode">corecolor</span> unit with methods that are not needed everyday. While the <span class="inlinecode">corecolor</span> unit is loaded automatically, the <span class="inlinecode">color</span> unit has to be manually loaded using <a href="../bin/obj_13.htm#665">loadUnit</a><!-- domapi.loadUnit -->.<br /><span class="inlinecode">Colorpicker</span> is a descendant of <a href="../bin/obj_20.htm">Dropdown</a><!-- Dropdown -->, and therefore inherits all its members, as well as uses its constructor parameters. </p><p> The color object contains various properties and methods relating to color manipulation. It is defined in two files, <span class="inlinecode">corecolor.js</span> and <span class="inlinecode">color.js</span>.<br /><span class="inlinecode">Corecolor.js</span> contains the methods that are required for basic component operation and is loaded automatically by <span class="inlinecode">domapi.js</span>.<br /><span class="inlinecode">Color.js</span> is an optional file that when included extends the color object with additional features. It also extends the <a href="../bin/obj_19.htm">Elm</a><!-- Elm --> object with methods for fading colors. </p><hr /><a name="contents">&nbsp;</a><h4>Methods unique to domapi.color</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#653">alterColor</a> (in color.js)</li><li><a href="#669">hexToInt</a></li><li><a href="#655">hexToRgb</a> (in color.js)</li><li><a href="#1196">hslToRgb</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /> (in color.js)</li><li><a href="#670">intToHex</a></li><li><a href="#671">makeSureIsHexColor</a></li><li><a href="#656">mergeColor</a> (in color.js)</li><li><a href="#672">rgbToHex</a></li><li><a href="#1195">rgbToHsl</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /> (in color.js)</li><li><a href="#657">setColor</a> (in color.js)</li></ul></td></tr></table><h4>Properties unique to domapi.color</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#224">lookupColorNames</a> (in color.js)</li><li><a href="#225">lookupColors</a> (in color.js)</li></ul></td></tr></table><hr /><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="653">alterColor ( color, percentage )</a></th><td>type : String</td></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> Pass in a hex color and a percentage, and this returns the new color. Pass negative percentages to darken a color, positive to lighten. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">color</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">percentage</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="669">hexToInt ( hex )</a></th><td>type : integer</td></tr></table><p> Converts a hex value to decimal . Used by color routines. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">hex</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="655">hexToRgb ( hexValue )</a></th><td>type : Array</td></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> Takes a hex color and splits it up into an array of three decimal values ranging from 0 to 255. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">hexValue</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1196">hslToRgb ( HSL )</a></th><td>type : Array</td></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> Accepts an HSL array and outputs its RGB equivalent. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">HSL</td><td>Array</td><td class="opt">Y</td><td>&nbsp;</td><td> A three item array containing the HSL value to be converted. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="670">intToHex ( int )</a></th><td>type : String</td></tr></table><p> Converts a decimal value to hex. Used by color routines. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">int</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="671">makeSureIsHexColor ( color )</a></th><td>type : String</td></tr></table><p> Mozilla likes to surface color values in RGB format. This function will convert such a value to hex, or just pass the original back if it doesn't need to. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">color</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="656">mergeColor ( color1, color2, method )</a></th><td>type : String</td></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> Performs a bitwise change on a given color or colors.<br><br> Valid <span class=inlinecode>methods</span> are:<br><table cellpadding=0 cellspacing=0 border=0><tr><td>"and"</td><td>result = color1 & color2</td></tr><tr><td>"or"</td><td>result = color1 | color2</td></tr><tr><td>"xor"</td><td>result = color1 ^ color2</td></tr><tr><td>"not"</td><td>result = ~ color1</td></tr><tr><td>"add"</td><td>result = color1 + color2</td></tr><tr><td>"subtract"</td><td>result = color1 - color2</td></tr><tr><td>"blend"</td><td>result = average of color1 and color2</td></tr><tr><td>"floor"</td><td>Takes average of RGB in color1 and rounds to either white or black.</td></tr></table><br> Check source and examples for more details. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">color1</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">color2</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">method</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="672">rgbToHex ( RGB )</a></th><td>type : String</td></tr></table><p> Takes an array of three integers, R,G and B , and converts them into a hex color. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">RGB</td><td>Array</td><td class="opt">Y</td><td>&nbsp;</td><td> Three element array containing the RGB values. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1195">rgbToHsl ( rgb )</a></th><td>type : Array</td></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> Accepts an RGB array and outputs an array containing the HSL equivalents. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">rgb</td><td>Array</td><td class="opt">Y</td><td>&nbsp;</td><td> Three element array containing the RGB values. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="657">setColor ( id, color, kind )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> This is a quick and dirty way to set a color of an HTML element even if it's not been parsed via <span class=inlinecode>Elm()</span>. <span class=inlinecode>kind</span> parameter is either "fg" or "bg" </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">id</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> ID of the element to set the color of. &nbsp; </td></tr><tr><td class="nm">color</td><td>String</td><td class="opt">&nbsp;</td><td>#FFFFFF&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">kind</td><td>String</td><td class="opt">&nbsp;</td><td>bg&nbsp;</td><td> bg = background<br /> fg = foreground &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="224">lookupColorNames</a></th><td>type : Array</td></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> This array is in sync with the <span class="inlinecode">lookupColors</span> array. It is used to associate color constants such as "red" with their hex equivilants (#FF0000)<br><span class="inlinecode">lookupColorNames</span> has a method named <span class="inlinecode">indexOf()</span> which locates a given color constant in the list or returns -1 if it doesn't exist. </p><h5>Example:</h5><pre class="code">
// returns #FF0000
var color=lookupColors[lookupColorNames.indexOf("red")];</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="225">lookupColors</a></th><td>type : Array</td></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> This array is in sync with the <span class="inlinecode">lookupColorNames</span> array. It is used to associate color constants such as "red" with their hex equivilants (#FF0000) </p></div><a href="#contents">back to top</a><hr />  </body></html>
