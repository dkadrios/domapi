<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Listbox</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Listbox</h2> See also: <a href="obj_19.htm">Elm</a><br /> See also: <a href="obj_48.htm">Component</a><br /><p> A standard listbox component with a whole slew of features that affect it's look-and-feel. Supports mutiple selection, sorting, drag-n-drop and more. </p><p> The Listbox has a property named <span class="inlinecode">items</span> which can be treated as a Array. You can access each item in the list using array notation, such as <span class="inlinecode">Listbox1.items.[0].innerHTML="boo"</span><br /> This would set the text of the first item in the list. Take care not to try to access an item that doesn't exist. You can use <span class="inlinecode">items.length</span> to determine how many items are in the list. (remember that the array starts with zero, not one!) <br /><br /> The listbox has a method named <span class="inlinecode">addItem()</span> which takes two parameters. The first parameter is the caption of the item to add.<br /> The second is optional and should be javascript code enclosed in string quotes. This code will be executed if the item is selected. For example: <pre class="code">listitem1.addItem("Item One");
listitem1.addItem("Item Two");
listitem1.addItem("Item Three","itemSelected(3)");
listitem1.addItem("Item Four","itemSelected(this.innerText)");
listitem1.addItem("Item Five" ,"top.mainFrame.location='top.htm'");</pre> In this example, the first two items do not have any code attached to them. The third one calls a function named itemSelected, passing the value "item three". The forth item accomplishes the same thing in a more generic manner, in this case the string "Item Four" would be passed. The fifth example loads a new page into a frame named "mainFrame". Using this or a similar technique, a list can be used as a navigation tool. <br /><br /> The component has a property named <span class="inlinecode">selected</span> which is a array where each element is a pointer to currently selected Listitems. Use <span class="inlinecode">selected.length</span> to determine how many are selected when <span class="inlinecode">mulsiSelect = true</span>. There is also an Event named <span class="inlinecode">onchange</span> which fires when the user selects an item. You can overwrite this method to respond to the change Event.<br /> The Listbox example illustrates this.<br /> Additionally there is an <span class="inlinecode">onbeforechange</span> event that fires just before the <span class="inlinecode">onchange</span> event. You can return a boolean value as the result of this event to either cancel or allow the selection to take place.<br /> Both the <span class="inlinecode">onchange</span> and <span class="inlinecode">onbeforechange</span> events pass in a single parameter, which is a pointer to the item being selected. <br /><br /> There is also a property named <span class="inlinecode">multiSelect</span> which, if set to true, allows the user to select more than one Listitem.<br/> MultiSelect is false by default. <br /><br /><b>Note:</b> when multiSelect=true, to get at which values are currently selected, you cycle through the <span class="inlinecode">selected</span> to get at them. For example: <pre class="code">listbox1.onchange = function(){
  for(var a=0;a&lt;this.selected.length;a++)
    alert(this.selected[a].innerHTML);
}</pre> The most powerful method of the listbox is <span class="inlinecode">delimitedText()</span> which allows you to add many items to the list at once. <br /><br /> The code to create a Listbox is as follows: <pre class="code">&lt;html&gt;
&lt;head&gt;
  &lt;script src="../src/domapi_c.js"&gt;&lt;/script&gt;
  &lt;script&gt;
    domapi.loadUnit("listbox");
    onload=init;
    function init(){
      listbox1=Listbox(null,null,50,100,150,225);
      listbox1.onchange=listbox1Changed;
      listbox1.addItem("Item One");
      listbox1.addItem("Item Two");
      listbox1.addItem("Item Three");
    }
    //----
    function listbox1Changed(item){
      alert("Selected: "+item.innerHTML);
    }
  &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></p><hr /><a name="contents">&nbsp;</a><h4>Events unique to domapi.Listbox</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#844">onbeforechange</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /></li><li><a href="#845">onchange</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Listbox also has the same events as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Methods unique to domapi.Listbox</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#725">addItem</a></li><li><a href="#726">clearItems</a></li><li><a href="#727">deleteItem</a></li><li><a href="#728">delimitedText</a></li><li><a href="#729">findItem</a></li><li><a href="#730">selectItem</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /></li><li><a href="#731">setItem</a></li><li><a href="#732">sortItems</a>&nbsp;<img src="improved.gif" alt="" width="50" height="14" border="0" align="absbottom" /></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Listbox also has the same methods as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Properties unique to domapi.Listbox</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#273">allowNoSelect</a></li><li><a href="#280">doHLines</a></li><li><a href="#281">items</a></li><li><a href="#284">ledgerMode</a></li><li><a href="#285">multiSelect</a></li><li><a href="#286">selected</a></li><li><a href="#287">showSelection</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Listbox also has the same properties as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><hr /><div class="prop_group_title">Events</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="844">onbeforechange ()</a></th></tr></table><p> Fires right before the <span class="inlinecode">onchange</span> event. You can return <span class="inlinecode">false</span> to stop the selection from taking place. If you do, the <span class="inlinecode">onchange</span> event will not fire.<br /><span class="inlinecode">item</span> is the item the user is selecting.<br /><b>NOTE</b>: You must return <span class="inlinecode">true</span> from this event to allow the selection to take place. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="845">onchange ()</a></th></tr></table><p> Fires after users has selected an item. <span class="inlinecode">item</span> is the item the user is selecting.<br /></p><h5>Example:</h5><pre class="code">
listbox1.onchange=function(item){alert("you selected " + item.innerHTML)};</pre></div><a href="#contents">back to top</a><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="725">addItem ( arg )</a></th></tr></table><p> Adds an item to the list. <span class="inlinecode">Caption</span> can be plain-text or HTML.<br> The second parameter <span class="inlinecode">fn</span> is an optional string of javascript code to perform after the item is selected. See below for more info. </p><h5>Example:</h5><pre class="code">
with(listbox1){
  addItem("Item 1");
  addItem("Item 2","alert('item2')");
}</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">arg</td><td>Object</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Inline object containing the following:<br /> text : string<br /> value : variant<br /> onselect : function &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="726">clearItems ()</a></th></tr></table><p> Deletes every item from the list. </p><h5>Example:</h5><pre class="code">
if(confirm("Are you sure?"))listbox1.clearItems();</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="727">deleteItem ( i )</a></th></tr></table><p> Deletes the item at the given index. Zero is the first item's index. </p><h5>Example:</h5><pre class="code">
// removes last item in list
with(listbox1)
   if(items.length &gt; 1)deleteItem(items.length-1);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> Ordinal position &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="728">delimitedText ( s, delimiter )</a></th></tr></table><p> This method takes in a character delimited string and creates an item for each entry. For example, passing in the string <span class="inlinecode">"red,white,blue"</span> would cause the listbox to add three items of the cooresponding captions.<br> The default delimiter a comma, or you can specify another to use. </p><h5>Example:</h5><pre class="code">
listbox1.delimitedText("one,two,three");

listbox1.delimitedText("four|five|six","|");

directorylistbox1.delimitedText("root\program files\my dir\","\");</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">s</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">delimiter</td><td>String</td><td class="opt">&nbsp;</td><td>,&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="729">findItem ( s, ignoreCase )</a></th></tr></table><p> Attempts to locate an item in the list. Returns a pointer to the item or <span class="inlinecode">null</span> if not found.<br> By default searches are case-sensitive. Pass <span class="inlinecode">true</span> as the second parameter for case-insensitive searches. </p><h5>Example:</h5><pre class="code">
var myItem = listbox1.findItem("boat",true);  // search for mixed-case "boat"
if(myItem != null) alert("found a boat!");</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">s</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> value to find &nbsp; </td></tr><tr><td class="nm">ignoreCase</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="730">selectItem ( i )</a></th></tr></table><p> Causes the listbox to select the item located at the index provided in <span class="inlinecode">i</span>. Mimics the user clicking the item. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> Ordinal position. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="731">setItem ( i, arg )</a></th></tr></table><p> This method will overwrite an existing item. Params are the same as <span class="inlinecode">addItem()</span> with the exception of the first which is the index of the item to overwrite. The first item in the list is item number zero. </p><h5>Example:</h5><pre class="code">
listbox1.setItem(4,{value:"Item 5"});
listbox1.setItem(0,{value:"Item 1",onselect:"close()"});</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">i</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> Ordinal position. &nbsp; </td></tr><tr><td class="nm">arg</td><td>Object</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Inline object containing new values for text, value and onselect &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="732">sortItems ( direction, type )</a></th></tr></table><p> Sorts the items in the list alphanumerically.<br><span class="inlinecode">dir</span> is the sort direction. 0=acsending, 1=descending </p><h5>Example:</h5><pre class="code">
listbox1.sortItems(0);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">direction</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">type</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="273">allowNoSelect</a></th><td>type : boolean</td><td>default value : false</td></tr></table><p> If set to false, the control will not allow there to ever be less than one selected node. The first node added to the list will be immediately selected. </p><h5>Example:</h5><pre class="code">
listbox1.allowNoSelect = true;  // user can deselect all items</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="280">doHLines</a></th><td>type : boolean</td><td>default value : true</td></tr></table><p> Controls whether or not horizontal lines are drawn between items </p><h5>Example:</h5><pre class="code">
listbox1.hLines = false; // hide lines</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="281">items</a></th><td>type : Collection</td></tr></table><p> Each item in the list is accessed via this object. (which can be treated like a standard Array) </p><h5>Example:</h5><pre class="code">
alert("there are " + this.items.length + " items");

alert("item 4 is " + this.items[3].innerHTML);</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="284">ledgerMode</a></th><td>type : boolean</td><td>default value : false</td></tr></table><p> When <span class=inlinecode>ledgerMode</span> is true, the control automatically alternates background colors when drawing items. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="285">multiSelect</a></th><td>type : boolean</td><td>default value : false</td></tr></table><p> If true, user can select more than one item. </p><h5>Example:</h5><pre class="code">
listbox1.multiSelect = true;  // allow the user to select more than one item</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="286">selected</a></th><td>type : Array</td></tr></table><p> Pointer to the currently selected item. Returns null if none are selected. </p><h5>Example:</h5><pre class="code">
listbox1.onchange=function(){alert("you selected " + this.selected.innerHTML)};</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="287">showSelection</a></th><td>type : boolean</td><td>default value : true</td></tr></table><p> Determines whether or not the control highlights the selected item. </p><h5>Example:</h5><pre class="code">
listbox1.showSelection = false; // do not highlight item</pre></div><a href="#contents">back to top</a><hr />  </body></html>
