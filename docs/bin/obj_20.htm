<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Dropdown</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Dropdown</h2> See also: <a href="obj_19.htm">Elm</a><br /> See also: <a href="obj_48.htm">Component</a><br /><p> This component forms the basis for all the dropdown-like components, like <a href="../bin/obj_16.htm">Datepicker</a><!-- Datepicker -->, <a href="../bin/obj_8.htm">Colorpicker</a><!-- Colorpicker --> and <a href="../bin/obj_10.htm">Combobox</a><!-- Combobox -->. If you create your own dropdown components, this is a good ancestor class to use. </p><p> The dropdown component is intended for use as an ancestor class for other controls. On it's own its a pretty useless component. <br /><br /><b>Some general notes about implementing:</b><br> Descendant components should implement a function named <span class="inlinecode">draw()</span> to draw the dropdown panel's content. <br /> Descendant components should read the value of the <span class="inlinecode">autoClose</span> property and respond accordingly. </p><hr /><a name="contents">&nbsp;</a><h4>Events unique to domapi.Dropdown</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#856">onbeforechange</a></li><li><a href="#1202">onbtnclick</a></li><li><a href="#843">onchange</a></li><li><a href="#1200">onclose</a></li><li><a href="#1201">onopen</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Dropdown also has the same events as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Methods unique to domapi.Dropdown</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#1205">close</a></li><li><a href="#1204">open</a></li><li><a href="#820">setDoRollover</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Dropdown also has the same methods as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Properties unique to domapi.Dropdown</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#269">autoClose</a></li><li><a href="#270">direction</a></li><li><a href="#400">doRollover</a></li><li><a href="#404">dropBtn</a></li><li><a href="#1203">dropDown</a></li><li><a href="#271">edit</a></li><li><a href="#405">opened</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Dropdown also has the same properties as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><hr /><div class="prop_group_title">Events</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="856">onbeforechange ( value )</a></th></tr></table><p> Fires just before the component's value changes. This gives you an opportunity to respond to the change.<br /> You must return <span class="inlinecode">true</span> to allow the change to occur. Returning <span class="inlinecode">false</span> disallows the change. The single parameter passed into the function is the new value. </p><h5>Example:</h5><pre class="code">
// disallow value == 5
elm1.onchange=function(value){
  if(value==5)return false;
  else return true;
};</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> The new value &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1202">onbtnclick ()</a></th></tr></table><p> Fires after the user clicks the open/close button. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=20#1200">onclose</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=20#1201">onopen</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="843">onchange ( value )</a></th></tr></table><p> Fires just after the value changes (and after the <span class="inlinecode">onbeforechange</span> event allowed it.)<br /> The single parameter passed to the event is the new value. Decendant components may overwrite this functionallity. </p><h5>Example:</h5><pre class="code">
elm1.onchange=function(value){alert(value)};

-or-

elm1.onchange=changed; // where changed is a function</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> The new value &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1200">onclose ()</a></th></tr></table><p> Fires when the dropdown is closed. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1201">onopen ()</a></th></tr></table><p> Fires when the dropdown is opened and displayed. </p></div><a href="#contents">back to top</a><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1205">close ()</a></th></tr></table><p> Used internally to 'close' the dropdown. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=20#1205">close</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1204">open ()</a></th></tr></table><p> Used internally to 'open' the dropdown. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=20#1204">open</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="820">setDoRollover ( rollover )</a></th></tr></table><p> &nbsp; </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">rollover</td><td>boolean</td><td class="opt">Y</td><td>&nbsp;</td><td> Used to set the <a href="../bin/obj_20.htm#400">doRollover</a> property. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="269">autoClose</a></th><td>type : boolean</td><td>default value : true</td></tr></table><p> Whether or not control closes upon value selection. Must be implemented by descendant class. </p><h5>Example:</h5><pre class="code">
elm1.autoClose = false;</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="270">direction</a></th><td>type : String</td></tr></table><p> Which way the dropdown opens (up, down, left, right) </p><h5>Example:</h5><pre class="code">
elm1.direction = "right";</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="400">doRollover</a></th><td>type : boolean</td><td>default value : true</td></tr></table><p> Read-only. Whether or not the control uses rollover animation.<br /> Use <span class="inlinecode">setDoRollover()</span> to modify. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="404">dropBtn</a></th><td>type : Rollover</td></tr></table><p> Pointer to the button used to open and close the dropdown.<br /> You can toggle the dropdowns state by calling <span class="inlinecode">dropBtn.onclick()</span>, which simulates a mouse click. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1203">dropDown</a></th><td>type : variant</td></tr></table><p> A reference to the element displayed when the dropdown is opened. Varies widely depending on the component. For instance, the dropDown of a Datepicker component is a <a href="../bin/obj_5.htm">Calendar</a><!-- Calendar -->. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="271">edit</a></th><td>type : HTMLElement</td></tr></table><p> Pointer to the edit control, which is a standard &lt;input&gt; control. Use <span class="inlinecode">edit.value</span> to retrieve value. </p><h5>Example:</h5><pre class="code">
alert(elm1.edit.value);</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="405">opened</a></th><td>type : boolean</td><td>default value : false</td></tr></table><p> Read-only. Whether or not the dropdown is opened. </p></div><a href="#contents">back to top</a><hr />  </body></html>
