<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Combobox</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Combobox</h2> See also: <a href="obj_19.htm">Elm</a><br /> See also: <a href="obj_48.htm">Component</a><br /><p> In read-only mode this component offers nothing new over a <span class=inlinecode>&lt;select&gt;</span>, besides it's look-and-feel. It's strength lies in it's <b>non</b> read-only mode, which allows the user to type in a new entry as well as select an existing one.<br /><span class="inlinecode">Combobox</span> is a descendant of <a href="../bin/obj_20.htm">Dropdown</a><!-- Dropdown -->, and therefore inherits all its members, as well as uses its constructor parameters. </p><p> You interact with the items using the <a href="../bin/obj_10.htm#1243">addItem</a><!-- Combobox.addItem --> method. You can also access them using any methods of the <span class="inlinecode">dropDown</span> property, which is a <a href="../bin/obj_22.htm">Listbox</a><!-- Listbox --></p><hr /><h3 style="margin-top:0px !important">Constructor Parameters unique to domapi.Combobox</h3><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th></tr><tr><td class="nm">doLines</td><td>boolean</td><td>&nbsp;</td><td> Controls whether or not the listbox display horizontal lines between each item. </td></tr></table><span style="margin-left:20px;font-size:smaller"> You can also use <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a> constructor parameters when creating a <span class="inlinecode">domapi.Combobox</span> instance. </span><hr /><a name="contents">&nbsp;</a><h4>Methods unique to domapi.Combobox</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#1243">addItem</a></li><li><a href="#1244">selectItem</a></li><li><a href="#1245">selectItemByValue</a></li><li><a href="#821">setDoAllowEdit</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Combobox also has the same methods as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Properties unique to domapi.Combobox</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#401">doAllowEdit</a></li><li><a href="#230">dropDown</a></li><li><a href="#1241">edit</a></li><li><a href="#231">value</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Combobox also has the same properties as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><hr /><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1243">addItem ( text, value )</a></th></tr></table><p> Used to add items to the dropdown. Internally, this calls the Listbox's <a href="../bin/obj_22.htm#725">addItem</a><!-- Listbox.addItem --> method. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">text</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> The caption of the new item. &nbsp; </td></tr><tr><td class="nm">value</td><td>variant</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> The actual value of the item. If not provided, <span class="inlinecode">text</span> is used. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1244">selectItem ( index )</a></th></tr></table><p> Used to select a particular item in the dropdown. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> The index of the item to select. Indexes start from zero. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=10#1245">selectItemByValue</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1245">selectItemByValue ( value )</a></th></tr></table><p> Used to select an item based on its value, not its index. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>variant</td><td class="opt">Y</td><td>&nbsp;</td><td> The value to search for in the list. If an item is found with a matching value, it it selected. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=10#1244">selectItem</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="821">setDoAllowEdit ( allowEdit )</a></th></tr></table><p> &nbsp; </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">allowEdit</td><td>boolean</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="401">doAllowEdit</a></th><td>type : boolean</td><td>default value : true</td></tr></table><p> Read-only. Use <a href="../bin/obj_10.htm#821">setDoAllowEdit</a><!-- Combobox.setAllowEdit --> to modify.<br /> When false, the user cannot type a new value and can only select from the list. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="230">dropDown</a></th><td>type : Listbox</td></tr></table><p> Pointer to the component's internal <a href="../bin/obj_22.htm">Listbox</a><!-- Listbox -->. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1241">edit</a></th><td>type : HTMLElement</td></tr></table><p> A reference to the editbox used by the control. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="231">value</a></th><td>type : String</td></tr></table><p> The currently selected item or entered value.<br> To set this programatically, be sure to also set <span class=inlinecode>edit.value</span>, which controls what is displayed. You must change both to keep the control in sync. </p></div><a href="#contents">back to top</a><hr />  </body></html>
