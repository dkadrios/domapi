<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Pagecontrol</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Pagecontrol</h2> See also: <a href="obj_19.htm">Elm</a><br /> See also: <a href="obj_48.htm">Component</a><br /><p> Modeled after the standard Windows&reg; tabcontrol. You can manually add each page's content, insert existing page elements, or load in an external file. Makes for very expressive page layouts. </p><p> &nbsp; </p><hr /><h3 style="margin-top:0px !important">Constructor Parameters unique to domapi.Pagecontrol</h3><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th></tr><tr><td class="nm">orientation</td><td></td><td>top&nbsp;</td><td> Where the tabs are to be placed. Values are <span class="inlinecode">top</span> or <span class="inlinecode">bottom</span>. </td></tr><tr><td class="nm">tabsetOffset</td><td>integer</td><td>0&nbsp;</td><td> Amount the tabs are to overlap the content. Should be zero for most needs. Some themes may alter this. </td></tr></table><span style="margin-left:20px;font-size:smaller"> You can also use <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a> constructor parameters when creating a <span class="inlinecode">domapi.Pagecontrol</span> instance. </span><hr /><a name="contents">&nbsp;</a><h4>Events unique to domapi.Pagecontrol</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#848">onchange</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Pagecontrol also has the same events as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Methods unique to domapi.Pagecontrol</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#750">addPage</a></li><li><a href="#751">assignElement</a></li><li><a href="#1335">clear</a></li><li><a href="#1334">loadPage</a></li><li><a href="#1333">setIndex</a></li><li><a href="#1336">setTabValue</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Pagecontrol also has the same methods as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><h4>Properties unique to domapi.Pagecontrol</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#313">pages</a></li><li><a href="#312">tabIndex</a></li><li><a href="#315">tabs</a></li></ul><span style="margin-left:40px;font-size:smaller"> domapi.Pagecontrol also has the same properties as <a href="obj_19.htm">Elm</a> and <a href="obj_48.htm">Component</a>.</span></td></tr></table><hr /><div class="prop_group_title">Events</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="848">onchange ( index )</a></th></tr></table><p> Fires after the user has clicked on a tab. Passes the index of the new tab to the event, or you can refer to <a href="../bin/obj_30.htm#312">tabIndex</a><!-- Pagecontrol.tabIndex -->. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="750">addPage ( value, type, url, delayLoad, refreshPage )</a></th><td>type : HTMLElement</td></tr></table><p> Adds a brand new page to the control and returns a reference to the new page. The tab's caption will be set to <span class=inlinecode>text</span>. The type of content to make the page out of is passed in <span class=inlinecode>controlType</span>. Currently, this must be either <span class=inlinecode>"P", "IFRAME"</span> or <span class=inlinecode>"DIV"</span>.<br> If <span class=inlinecode>"IFRAME"</span> is used, then the <span class=inlinecode>url</span> parameter is the initial path of the page to display. Otherwise, <span class=inlinecode>url</span> is not used.<br> During runtime, you can change the page displayed by using the <a href="../bin/obj_30.htm#1334">loadPage</a><!-- Pagecontrol.loadPage --> method. For example: <span class=inlinecode>pc1.loadPage(2, "www.mycoolsite.com");</span><br><br><b>NOTE:</b> IE5 cannot deal with dynamic IFRAMES. To use IFRAMES as pages, you need to include it in your page as HTML then use <span class=inlinecode><a href="../bin/obj_30.htm#751">assignElement</a><!-- Pagecontrol.assignElement --></span> to add it into the control. </p><h5>Example:</h5><pre class="code">
elm1.addPage({text:"Tab Caption"});

elm1.addPage({text:"My Site", type:"IFRAME", url:"www.mycoolsite.com"});</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> The caption for the new tab. NOTE, you can also use <span class="inlinecode">text</span> instead of <span class="inlinecode">value</span>. &nbsp; </td></tr><tr><td class="nm">type</td><td>String</td><td class="opt">&nbsp;</td><td>DIV&nbsp;</td><td> The type of element to make the new page out of. Examples: DIV, IFRAME, etc.. &nbsp; </td></tr><tr><td class="nm">url</td><td>String</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> If the <span class="inlinecode">type</span> is IFRAME, then this is the url to load into it. &nbsp; </td></tr><tr><td class="nm">delayLoad</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> If <span class="inlinecode">type</span> is IFRAME, then this parameter can affect whether or not the page is loaded from the server before the page is shown. &nbsp; </td></tr><tr><td class="nm">refreshPage</td><td>boolean</td><td class="opt">&nbsp;</td><td>false&nbsp;</td><td> If <span class="inlinecode">type</span> is IFRAME, then this parameter controls whether the page is relaoded each time it is shown. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="751">assignElement ( id, index, overwrite, value )</a></th></tr></table><p> This powerful method takes an existing element from the page and moves it into a page of the control.<br><span class=inlinecode>id</span> is the <span class=inlinecode>ID</span> of a DOMElement to assign to a page.<br><span class=inlinecode>index</span> is the page index to perform the assignment on. If <span class=inlinecode>index</span> is <span class=inlinecode>null</span>, a new page will be added to the control to hold the assigned element. If <span class=inlinecode>index</span> is greater than the current number of pages, the control will insert enough blank pages to accomodate it.<br><span class=inlinecode>overwrite</span> is a flag that tell the control whether or not to append the assigned control the the page's existing content, or to completely overwrite it. <span class=inlinecode>overwrite</span> is true by default.<br> If a <span class=inlinecode>value</span> is passed, the tab of the assigned page will have it's caption changed to this value. </p><h5>Example:</h5><pre class="code">
// overwrite tab one's content with 'div1'
elm1.assignElement({id:'div1', index:0});

//  set page 5's content to 'div2' and set it's tab to 'DIV2'.
// add empty pages if needed
elm1.assignElement({id:'div2', index:4, value:'DIV2'});

// overwrite tab 2's content with 'div3' and set the tab's caption
elm1.assignElement({id:'div3', index:1, overwite:true, value:'DomAPI Rules'});

// append 'div4' to page 2's content.  do no overwrite
elm1.assignElement({id:'div4', index:1, overwrite:false});</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">id</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> The id of the element to be assigned. &nbsp; </td></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Where in the control to insert the new page, or which existing page to overwite. Omit this parameter to have the new page added at the end. &nbsp; </td></tr><tr><td class="nm">overwrite</td><td>boolean</td><td class="opt">&nbsp;</td><td>true&nbsp;</td><td> If you specify an existing index, this controls whether any existing content is kept or removed. &nbsp; </td></tr><tr><td class="nm">value</td><td>String</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Caption of the new tab. You can also use <span class="inlinecode">text</span> instead. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1335">clear ()</a></th></tr></table><p> Removes all the tabs and page. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1334">loadPage ( index, url )</a></th></tr></table><p> If a page uses an IFRAME, this method will load an url into it. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> The page index. &nbsp; </td></tr><tr><td class="nm">url</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1333">setIndex ( index )</a></th></tr></table><p> Selects the specfied page. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1336">setTabValue ( index, value )</a></th></tr></table><p> Changes the <span class="inlinecode">value</span> or 'caption' of a specified tab. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">index</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">value</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="313">pages</a></th><td>type : Array</td></tr></table><p> Each added page shows up in this collection. Each page is an <span class=inlinecode>Elm()</span> and has a <span class=inlinecode>DA_TYPE</span> of <span class=inlinecode>"PAGECONTROLPAGE"</span>. Currently, pages must be either <span class=inlinecode>&lt;P&gt;, &lt;IFRAME&gt;</span> or <span class=inlinecode>&lt;DIV&gt;</span>.<br> Pages are added via the <span class=inlinecode>addPage()</span> method. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="312">tabIndex</a></th><td>type : integer</td><td>default value : -1</td></tr></table><p> Index of the currently selected tab. By default, the first tab is selected. <br /><br /> This value is read-only. To change it, use <a href="../bin/obj_30.htm#1333">setIndex</a><!-- Pagecontrol.setIndex --></p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="315">tabs</a></th><td>type : Array</td></tr></table><p> This is a collection of each tab Object that have been added. These tabs are are type <span class=inlinecode>Elm()</span>.<br> Each tab has an <span class=inlinecode>index</span> property. You should not assign <span class=inlinecode>onclick</span> events to the tabs as they have such events assigned internally.<br> Tabs are added via the <span class=inlinecode>addPage()</span> method. </p></div><a href="#contents">back to top</a><hr />  </body></html>
