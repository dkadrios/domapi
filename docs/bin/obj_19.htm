<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>DomAPI Docs - domapi.Elm</title><link rel="stylesheet" type="text/css" href="style.css"><meta http-equiv="expires" content="0"><meta http-equiv="cache-control" content="no-cache"></head><body><div id="logo"><a href="http://domapi.com"><img src="logo6.gif" alt="DomAPI Application Platform" border="0" /></a></div><a href="#" onclick="history.go(-1)"><img src="left.gif" alt="Back" width="14" height="14" border="0"></a><a href="#" onclick="history.go(-1)">Back</a>&nbsp;&nbsp;&nbsp; <a href="../index.htm"><img src="up.gif" alt="Up to index" width="14" height="14" border="0"></a><a href="../index.htm">Up to index</a><h2>domapi.Elm</h2><p> The Elm is the heart of DomAPI. It itself is a HTMLElement with custom properties and methods tacked on. Every component in DomAPI is made up of one or more Elms. Elms can be either be created from scratch or existing HTMLElements can be converted to Elms, either by id or reference, all using <a href="../bin/obj_13.htm#699">Elm</a>. </p><p> Each Elm has a property named <span class="inlinecode">DA_TYPE</span> which reports what type of Elm it is. Standard ones will have a value of "ELM", while components will usually report their component name. For instance, a Button component has a <span class="inlinecode">DA_TYPE</span> of "BUTTON".<br /> DomAPI maintains an array of every Elm created which is useful for looping through all the Elms, or for looking for Elms of a certain type. This array is named <span class="inlinecode">domapi.bags.elms</span> and should be considered read-only.<br /><br /> Check out the tutorial on the Elm Object for more detailed information on creating and using Elms. </p><hr /><h3 style="margin-top:0px !important">Constructor Parameters unique to domapi.Elm</h3><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th></tr><tr><td class="nm">bgcolor</td><td>String</td><td>&nbsp;</td><td> initial background color (doesn't really apply to Components, just Elms) </td></tr><tr><td class="nm">color</td><td>String</td><td>&nbsp;</td><td> initial foreground color (doesn't really apply to Components, just Elms) </td></tr><tr><td class="nm">h</td><td>integer</td><td>&nbsp;</td><td> Height in pixels. <br /><br /> NOTE: If both <span class="inlinecode">w</span> and <span class="inlinecode">h</span> are present, the Elm's overflow is set to "hidden". </td></tr><tr><td class="nm">id</td><td>String</td><td>&nbsp;</td><td> Instead of creating a new Elm, will use the HTMLElement identified by this id. </td></tr><tr><td class="nm">parent</td><td>HTMLElement</td><td>body&nbsp;</td><td> Existing element you want this new Elm inserted into. Defaults to the document body. Must be a reference, not an id. Use <span class="inlinecode">document.getElementById(id)</span> or <span class="inlinecode">domapi.getElm(id)</span> to convert an id to a reference. </td></tr><tr><td class="nm">position</td><td>String</td><td>undefined&nbsp;</td><td> Corresponds to the Elm's 'style.position' property. </td></tr><tr><td class="nm">ref</td><td>HTMLElement</td><td>&nbsp;</td><td> Instead of creating a new Elm, will use this HTMLElement instead. </td></tr><tr><td class="nm">skipAdd</td><td>boolean</td><td>false&nbsp;</td><td> Whether or not to insert the Elm into the document immediately. If set to <span class="inlinecode">true</span>, it is up to you to call the DOM method <span class="inlinecode">appendChild()</span> when and where you want it inserted. </td></tr><tr><td class="nm">skipPosition</td><td>boolean</td><td>false&nbsp;</td><td> Skips the code that applies initial positioning. This can improve performance if not needed. Currently this includes setting style <span class="inlinecode">left, top, width, height, overflow</span> and <span class="inlinecode">position</span>. <br /><br />
 NOTE: If <span class="inlinecode">ref</span> or <span class="inlinecode">id</span> were passed in the <span class="inlinecode">arg</span> param, <span class="inlinecode">skipPosition</span> defaults to <span class="inlinecode">true</span> instead. </td></tr><tr><td class="nm">skipStyle</td><td>boolean</td><td>false&nbsp;</td><td> Skips the code that applies initial styling. This can improve performance if not needed. Currently this only includes setting the fore and background colors. <br />
 <br />
NOTE: If <span class="inlinecode">ref</span> or <span class="inlinecode">id</span> were passed in the <span class="inlinecode">arg</span> param, <span class="inlinecode">skipStyle</span> defaults to <span class="inlinecode">true</span> instead. </td></tr><tr><td class="nm">type</td><td>String</td><td>DIV&nbsp;</td><td> Type of element to create the Elm as. <br />
 <span class="inlinecode">DIV, SPAN, IFRAME, P</span> etc.... </td></tr><tr><td class="nm">w</td><td>integer</td><td>&nbsp;</td><td> Width in pixels. <br /><br /> NOTE: If both <span class="inlinecode">w</span> and <span class="inlinecode">h</span> are present, the Elm's overflow is set to "hidden". </td></tr><tr><td class="nm">x</td><td>integer</td><td>&nbsp;</td><td> Left position in pixels. <br /><br /> NOTE: If both <span class="inlinecode">x</span> and <span class="inlinecode">y</span> are omitted, the Elm's style.position is undefined. If either or both are present, it's absolutely positioned. </td></tr><tr><td class="nm">y</td><td>integer</td><td>&nbsp;</td><td> Top position in pixels. <br /><br /> NOTE: If both <span class="inlinecode">x</span> and <span class="inlinecode">y</span> are omitted, the Elm's style.position is undefined. If either or both are present, it's absolutely positioned. </td></tr></table><hr /><a name="contents">&nbsp;</a><h4>Methods unique to domapi.Elm</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#652">alphaTo</a> (in color.js)</li><li><a href="#993">bringToFront</a></li><li><a href="#696">buttonDown</a></li><li><a href="#697">buttonUp</a></li><li><a href="#624">clipBy</a> (in animate.js)</li><li><a href="#625">clipTo</a> (in animate.js)</li><li><a href="#654">fadeToColor</a> (in color.js)</li><li><a href="#255">getAlpha</a></li><li><a href="#256">getB</a></li><li><a href="#257">getBgColor</a></li><li><a href="#258">getClip</a></li><li><a href="#259">getColor</a></li><li><a href="#260">getH</a></li><li><a href="#261">getM</a></li><li><a href="#262">getOverflow</a></li><li><a href="#263">getP</a></li><li><a href="#264">getW</a></li><li><a href="#265">getX</a></li><li><a href="#266">getY</a></li><li><a href="#267">getZ</a></li><li><a href="#626">glideBy</a> (in animate.js)</li></td><td valign="top"><li><a href="#627">glideTo</a> (in animate.js)</li><li><a href="#701">hide</a></li><li><a href="#704">moveBy</a></li><li><a href="#705">moveTo</a></li><li><a href="#706">moveToElm</a></li><li><a href="#628">pathSlide</a> (in animate.js)</li><li><a href="#1081">remove</a>&nbsp;<img src="new.gif" alt="" width="25" height="14" border="0" align="absbottom" /></li><li><a href="#975">resizeOff</a> (in resize.js)</li><li><a href="#974">resizeOn</a> (in resize.js)</li><li><a href="#994">sendToBack</a></li><li><a href="#707">setAlpha</a></li><li><a href="#708">setB</a></li><li><a href="#709">setBgColor</a></li><li><a href="#710">setClip</a></li><li><a href="#711">setClipBy</a></li><li><a href="#712">setColor</a></li><li><a href="#713">setH</a></li><li><a href="#714">setM</a></li><li><a href="#715">setOverflow</a></li><li><a href="#716">setP</a></li><li><a href="#717">setSize</a></li></td><td valign="top"><li><a href="#718">setSizeBy</a></li><li><a href="#719">setText</a></li><li><a href="#720">setW</a></li><li><a href="#721">setX</a></li><li><a href="#722">setY</a></li><li><a href="#723">setZ</a></li><li><a href="#724">show</a></li><li><a href="#629">sizeBy</a> (in animate.js)</li><li><a href="#630">sizeTo</a> (in animate.js)</li><li><a href="#268">visible</a></li></ul></td></tr></table><h4>Properties unique to domapi.Elm</h4><table><tr><td valign="top"><ul style="margin-bottom:0px"><li><a href="#389">DA_TYPE</a></li></ul></td></tr></table><hr /><div class="prop_group_title">Methods</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="652">alphaTo ( endAlpha, glideType, steps, speed, fn )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> This method is automatically added to the <span class="inlinecode">Elm()</span> prototype if the color unit is included on a page.<br><span class=inlinecode>endA</span> is the desired alpha transparency, zero being totally transparent and 100 being completely opaque.<br> The <span class=inlinecode>glideType</span> parameter determines the type of fade to perform. Valid values are: <ul><li>1 = slow-to-fast <li>2 = fast-to-slow <li>3 = linear </ul> Default is 3 (linear) which results in a gradual fade with <b>no</b> acceleration.<br><span class=inlinecode>steps</span> and <span class=inlinecode>speed</span> affect how fast the fade occurs and <span class=inlinecode>fn</span> is an optional function to execute after completion. </p><h5>Example:</h5><pre class="code">
domapi.loadUnit("color");
...
elm1.alphaTo(50);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">endAlpha</td><td>integer</td><td class="opt">&nbsp;</td><td>current alpha value&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">glideType</td><td>integer</td><td class="opt">&nbsp;</td><td>3&nbsp;</td><td> 1 = slow-to-fast<br />
 2 = fast-to-slow<br />
 3 = linear<br /> &nbsp; </td></tr><tr><td class="nm">steps</td><td>integer</td><td class="opt">&nbsp;</td><td>50&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>20&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">fn</td><td>Function</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Function to execute upon completion. Can be used to chain together multiple animations. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#255">getAlpha</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#707">setAlpha</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="993">bringToFront ()</a></th></tr></table><p> Brings the element to the top of the z-index stack for it's parent container. </p><h5>Example:</h5><pre class="code">
elm1.bringToFront();</pre><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#994">sendToBack</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="696">buttonDown ( borderWidth )</a></th></tr></table><p> Sets the element's border-style to inset. </p><h5>Example:</h5><pre class="code">
elm1.buttonDown(5);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">borderWidth</td><td>integer</td><td class="opt">&nbsp;</td><td>core.theme.border.width&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#697">buttonUp</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="697">buttonUp ( borderWidth )</a></th></tr></table><p> Sets the element's border-style to outset. </p><h5>Example:</h5><pre class="code">
elm1.buttonUp();</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">borderWidth</td><td>integer</td><td class="opt">&nbsp;</td><td>core.theme.border.width&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#696">buttonDown</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="624">clipBy ( top, right, bottom, left )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("animate");</span> before can be used!</p><p> Similar to <span class=inlinecode>clipTo()</span> but coordinates are relative to current location. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">top</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">right</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">bottom</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">left</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#258">getClip</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#625">clipTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#710">setClip</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#711">setClipBy</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="625">clipTo ( top, right, bottom, left, growType, steps, speed, fn )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("animate");</span> before can be used!</p><p> This method clips an element to a given rectangle in timed increments. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">top</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">right</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">bottom</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">left</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">growType</td><td>integer</td><td class="opt">&nbsp;</td><td>3&nbsp;</td><td> 1 = slow-to-fast <br />
 2 = fast-to-slow <br />
3 = linear &nbsp; </td></tr><tr><td class="nm">steps</td><td>integer</td><td class="opt">&nbsp;</td><td>50&nbsp;</td><td> size of each successive clip &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>20&nbsp;</td><td> the number of milliseconds between clips &nbsp; </td></tr><tr><td class="nm">fn</td><td>Function</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Function to execute upon completion. Can be used to chain animations together. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#258">getClip</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#624">clipBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#710">setClip</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#711">setClipBy</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="654">fadeToColor ( kind, targetColor, inc, speed, fn )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("color");</span> before can be used!</p><p> Given a target color, this routine will gradually blend the element's color to match it. Can optionally evalute a passed function upon completion. <br /><br /> See source and examples for more details. </p><h5>Example:</h5><pre class="code">
div1.fadeToColor("bg","#000000",10,10); // fade to black
div1.fadeToColor("bg","#000000",10,10,"alert('done.')"); // fade to black and tell me when it's done</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">kind</td><td>String</td><td class="opt">&nbsp;</td><td>bg&nbsp;</td><td> Specify either "bg" for background color, or "fg" for foreground. Default is "bg". &nbsp; </td></tr><tr><td class="nm">targetColor</td><td>String</td><td class="opt">&nbsp;</td><td>#000000&nbsp;</td><td> The target color to fade to &nbsp; </td></tr><tr><td class="nm">inc</td><td>integer</td><td class="opt">&nbsp;</td><td>10&nbsp;</td><td> Number of increments between color jumps. &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>10&nbsp;</td><td> Time in ms between jumps. &nbsp; </td></tr><tr><td class="nm">fn</td><td>Function</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Optional function to execute upon completion. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#709">setBgColor</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#712">setColor</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="255">getAlpha ()</a></th><td>type : integer</td></tr></table><p> Returns the elements current alpha transparency as a number between 0 and 100. Zero being totally clear and 100 completely opaque. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#257">getBgColor</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="256">getB ()</a></th><td>type : variant</td></tr></table><p> Returns a four element array containing the width of each border in pixels, starting with the top and moving clock-wise. <br />
See <a href="../bin/obj_13.htm#676">boxValuesOut</a> for info. </p><h5>Example:</h5><pre class="code">
var b=this.getB();
alert("Bottom border is "+b[2]);</pre></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="257">getBgColor ()</a></th><td>type : String</td></tr></table><p> Returns the element's background color. If <span class=inlinecode>color_c.js</span> was included on the page, this function will attempt to resolve color constants such as "red" into their hex equivilant. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#255">getAlpha</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#259">getColor</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="258">getClip ()</a></th><td>type : String</td></tr></table><p> Returns a four element array containing the amount of padding in pixels, starting with the top and moving clock-wise.<br /> See <a href="../bin/obj_13.htm#676">boxValuesOut</a> for info. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="259">getColor ()</a></th><td>type : String</td></tr></table><p> Returns the element's foreground (text) color. If <span class=inlinecode>color_c.js</span> was included on the page, this function will attempt to resolve color constants such as "red" into their hex equivilant. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#257">getBgColor</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="260">getH ()</a></th><td>type : integer</td></tr></table><p> Height of element in pixels. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#264">getW</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="261">getM ()</a></th><td>type : variant</td></tr></table><p> Returns a four element array containing the width of each margin in pixels, starting with the top and moving clock-wise.<br /> See <a href="../bin/obj_13.htm#676">boxValuesOut</a> for info. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#263">getP</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="262">getOverflow ()</a></th><td>type : String</td></tr></table><p> Returns a string representing the element's current overflow state. Valid entries are:<br /><br /><table border=0 cellpadding=0 cellspacing=0><tr><td style="background-color:white"><b>visible<b/></td><td style="background-color:white">Default. Content is not clipped and scroll bars are not added.</td></tr><tr><td style="background-color:white"><b>scroll</b></td><td style="background-color:white">Content is clipped and scroll bars are added, even if the content does not exceed the dimensions of the object.</td></tr><tr><td style="background-color:white"><b>hidden</b></td><td style="background-color:white">Content that exceeds the dimensions of the object is not shown.</td></tr><tr><td style="background-color:white"><b>auto</b></td><td style="background-color:white">Content is clipped and scrolling is added only when necessary.</td></tr></table></p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#715">setOverflow</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="263">getP ()</a></th><td>type : variant</td></tr></table><p> Returns a four element array containing the width of each padding in pixels, starting with the top and moving clock-wise.<br /> See <a href="../bin/obj_13.htm#676">boxValuesOut</a> for info. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#261">getM</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="264">getW ()</a></th><td>type : integer</td></tr></table><p> Width of element in pixels. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#260">getH</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="265">getX ()</a></th><td>type : integer</td></tr></table><p> Returns number of pixels from left side of parent container or browser window. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#266">getY</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="266">getY ()</a></th><td>type : integer</td></tr></table><p> Number of pixels from top of parent container or browser window. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#265">getX</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="267">getZ ()</a></th><td>type : integer</td></tr></table><p> The elements z-index. Elements with higher values appear on "top" of lower values. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="626">glideBy ( X, Y, glideType, steps, speed, fn, x1, y1, x2, y2, x3, y3 )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("animate");</span> before can be used!</p><p> Same as <span class=inlinecode>glideTo()</span> but coordinates are relative to current location. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">X</td><td>integer</td><td class="opt">&nbsp;</td><td>current location&nbsp;</td><td> Final location &nbsp; </td></tr><tr><td class="nm">Y</td><td>integer</td><td class="opt">&nbsp;</td><td>current location&nbsp;</td><td> Final location &nbsp; </td></tr><tr><td class="nm">glideType</td><td>integer</td><td class="opt">&nbsp;</td><td>3&nbsp;</td><td> Type of glide to perform.<br /> 1 = slow-to-fast<br /> 2 = fast-to-slow<br /> 3 = linear<br /> 4 = curve (beizer) &nbsp; </td></tr><tr><td class="nm">steps</td><td>integer</td><td class="opt">&nbsp;</td><td>50&nbsp;</td><td> Number of increments to make. &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>20&nbsp;</td><td> Time in ms to wait between succesive steps. &nbsp; </td></tr><tr><td class="nm">fn</td><td>Function</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Optional function to perform upon completion. &nbsp; </td></tr><tr><td class="nm">x1</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> First point for beizer curve &nbsp; </td></tr><tr><td class="nm">y1</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> First point for beizer curve &nbsp; </td></tr><tr><td class="nm">x2</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Second point for beizer curve &nbsp; </td></tr><tr><td class="nm">y2</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Second point for beizer curve &nbsp; </td></tr><tr><td class="nm">x3</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Third point for beizer curve &nbsp; </td></tr><tr><td class="nm">y3</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Third point for beizer curve &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#627">glideTo</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="627">glideTo ( X, Y, glideType, steps, speed, fn, x1, y1, x2, y2, x3, y3 )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("animate");</span> before can be used!</p><p> This method moves an element to a given location in timed increments. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">X</td><td>integer</td><td class="opt">&nbsp;</td><td>current location&nbsp;</td><td> Final location &nbsp; </td></tr><tr><td class="nm">Y</td><td>integer</td><td class="opt">&nbsp;</td><td>current location&nbsp;</td><td> Final location &nbsp; </td></tr><tr><td class="nm">glideType</td><td>integer</td><td class="opt">&nbsp;</td><td>3&nbsp;</td><td> Type of glide to perform.<br /> 1 = slow-to-fast<br /> 2 = fast-to-slow<br /> 3 = linear<br /> 4 = curve (beizer) &nbsp; </td></tr><tr><td class="nm">steps</td><td>integer</td><td class="opt">&nbsp;</td><td>50&nbsp;</td><td> Number of increments to make. &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>20&nbsp;</td><td> Time in ms to wait between succesive steps. &nbsp; </td></tr><tr><td class="nm">fn</td><td>Function</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Optional function to perform upon completion. &nbsp; </td></tr><tr><td class="nm">x1</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> First point for beizer curve &nbsp; </td></tr><tr><td class="nm">y1</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> First point for beizer curve &nbsp; </td></tr><tr><td class="nm">x2</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Second point for beizer curve &nbsp; </td></tr><tr><td class="nm">y2</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Second point for beizer curve &nbsp; </td></tr><tr><td class="nm">x3</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Third point for beizer curve &nbsp; </td></tr><tr><td class="nm">y3</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Third point for beizer curve &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#626">glideBy</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="701">hide ()</a></th></tr></table><p> Hides the element. (style.visibility = "hidden") </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#268">visible</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#724">show</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="704">moveBy ( x, y )</a></th></tr></table><p> Moves the element a relative amount in pixels. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">x</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">y</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#626">glideBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#627">glideTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#705">moveTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#706">moveToElm</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#721">setX</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#722">setY</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="705">moveTo ( x, y )</a></th></tr></table><p> Moves the element to the specified screen location in pixels. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">x</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">y</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#626">glideBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#627">glideTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#704">moveBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#706">moveToElm</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#721">setX</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#722">setY</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="706">moveToElm ( elm )</a></th></tr></table><p> Moves the element to the same location of another. </p><h5>Example:</h5><pre class="code">
elm1.moveToElm(elm2);</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">elm</td><td>HTMLElement</td><td class="opt">Y</td><td>&nbsp;</td><td> Target <b>MUST</b> also be an Elm &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="628">pathSlide ( xValues, yValues, startIndex, steps, speed )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("animate");</span> before can be used!</p><p> This method performs a series of linear slides. <br /> Pixel locations are specified using the two array parameters - one for X and one for Y. <br /><br /> See the <a href="../bin/obj_1.htm">animate</a> unit for more information. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">xValues</td><td>Array</td><td class="opt">Y</td><td>&nbsp;</td><td> Array of horizontal positions. &nbsp; </td></tr><tr><td class="nm">yValues</td><td>Array</td><td class="opt">Y</td><td>&nbsp;</td><td> Array of vertical positions. &nbsp; </td></tr><tr><td class="nm">startIndex</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> By default the path will start from the first pixel location in the array. You can provide a different starting index using this parameter. &nbsp; </td></tr><tr><td class="nm">steps</td><td>integer</td><td class="opt">&nbsp;</td><td>5&nbsp;</td><td> number of steps to make during move &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>20&nbsp;</td><td> time in ms to wait between moves &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="1081">remove ()</a></th></tr></table><p> Removes the elm from the page. Also deletes all references to it. <br /> Basically, frees the Elm completely. </p></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="975">resizeOff ( group )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("resize");</span> before can be used!</p><p> turns off resize for an elm </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">group</td><td>Array</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> If you are using the <span class="inlinecode">groups</span> extension, you can turn resize off for an entire group instead of just one Elm. <br />
Optional. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#974">resizeOn</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="974">resizeOn ( group )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("resize");</span> before can be used!</p><p> turns on resize for an elm </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">group</td><td>Array</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> If you are using the <span class="inlinecode">groups</span> extension, you can turn resize on for an entire group instead of just one Elm. <br /> Optional. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#975">resizeOff</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="994">sendToBack ()</a></th></tr></table><p> Sends the element to the bottom of the z-index stack for it's parent container. </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#993">bringToFront</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="707">setAlpha ( value )</a></th></tr></table><p> Sets the elements current alpha transparency as a number between 0 and 100. Zero being totally clear and 100 completely opaque. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> 0 - 100 &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#652">alphaTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#654">fadeToColor</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#709">setBgColor</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="708">setB ( value )</a></th></tr></table><p> Sets the element's border in pixels.<br /> The parameter can either be a single integer or an array of up to 4 integers. <br /><br /> See <a href="../bin/obj_13.htm#675">boxValuesIn</a> for more information on the input value. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> Single integer or 1 to 4 position array of integers. See <a href="../bin/obj_13.htm#675">boxValuesIn</a> for more info. &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="709">setBgColor ( color )</a></th></tr></table><p> Sets the background color of the element. </p><h5>Example:</h5><pre class="code">
elm1.setBgColor("black"  );
// or
elm1.setColor(  "#000000");</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">color</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#654">fadeToColor</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#707">setAlpha</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#712">setColor</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="710">setClip ( top, right, bottom, left )</a></th></tr></table><p> Sets the clip portion of the element as defined in CSS1. <br />
 <br />
The first parameter can optionally be an array of 1 to 4 integers. See <a href="../bin/obj_13.htm#675">boxValuesIn</a> for more info. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">top</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">right</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">bottom</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">left</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#711">setClipBy</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="711">setClipBy ( top, right, bottom, left )</a></th></tr></table><p> Similar to <a class=inlinecode>setClip</a>, but works relative with current clip values. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">top</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">right</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">bottom</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">left</td><td>integer</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#710">setClip</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="712">setColor ( color )</a></th></tr></table><p> Sets the foreground color of the element. </p><h5>Example:</h5><pre class="code">
elm1.setBgColor("black"  );
// or
elm1.setColor(  "#000000");</pre><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">color</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#654">fadeToColor</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#709">setBgColor</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="713">setH ( value )</a></th></tr></table><p> Sets the height of the element in pixels. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> Must be >= 0 &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#717">setSize</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#718">setSizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#720">setW</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="714">setM ( value )</a></th></tr></table><p> Sets the element's margin in pixels.<br /> The parameter can either be a single integer or an array of up to 4 integers. <br /><br /> See <a href="../bin/obj_13.htm#675">boxValuesIn</a> for more information. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>Array</td><td class="opt">Y</td><td>&nbsp;</td><td> Array of 1 to 4 integers. See <a href="../bin/obj_13.htm#675">boxValuesIn</a> for info. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#716">setP</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="715">setOverflow ( value )</a></th></tr></table><p> Sets the element's current overflow state. Valid entries are:<br /><br /><table border=0 cellpadding=0 cellspacing=0><tr><td style="background-color:white"><b>visible<b/></td><td style="background-color:white">Content is not clipped and scroll bars are not added.</td></tr><tr><td style="background-color:white"><b>scroll</b></td><td style="background-color:white">Content is clipped and scroll bars are added, even if the content does not exceed the dimensions of the object.</td></tr><tr><td style="background-color:white"><b>hidden</b></td><td style="background-color:white">Content that exceeds the dimensions of the object is not shown.</td></tr><tr><td style="background-color:white"><b>auto</b></td><td style="background-color:white">Content is clipped and scrolling is added only when necessary.</td></tr></table></p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="716">setP ( value )</a></th></tr></table><p> Sets the element's padding in pixels.<br /> The parameter can either be a single integer or an array of up to 4 integers. <br /><br /> See <a href="../bin/obj_13.htm#675">boxValuesIn</a> for more information. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>Array</td><td class="opt">Y</td><td>&nbsp;</td><td> 1 to 4 position array. See <a href="../bin/obj_13.htm#675">boxValuesIn</a> for info. &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#714">setM</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="717">setSize ( width, height )</a></th></tr></table><p> Sets the width and height in one call. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">width</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">height</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#629">sizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#630">sizeTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#713">setH</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#718">setSizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#720">setW</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="718">setSizeBy ( width, height )</a></th></tr></table><p> Changes the width and height by a relative amount. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">width</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr><tr><td class="nm">height</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#629">sizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#630">sizeTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#713">setH</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#717">setSize</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#720">setW</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="719">setText ( text )</a></th></tr></table><p> Sets the innerHTML for the element. Accepts any valid HTML. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">text</td><td>String</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="720">setW ( value )</a></th></tr></table><p> Sets the width of the element in pixels. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> Must be >= 0 &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#629">sizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#630">sizeTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#713">setH</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#717">setSize</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#718">setSizeBy</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="721">setX ( value )</a></th></tr></table><p> Moves the element to x pixels from the left side of the browser window. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#626">glideBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#627">glideTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#704">moveBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#705">moveTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#706">moveToElm</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#722">setY</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="722">setY ( value )</a></th></tr></table><p> Moves the element to y pixels from the top of the browser window. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#626">glideBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#627">glideTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#704">moveBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#705">moveTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#706">moveToElm</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#721">setX</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="723">setZ ( value )</a></th></tr></table><p> Sets the element's z-index. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">value</td><td>integer</td><td class="opt">&nbsp;</td><td>0&nbsp;</td><td> &nbsp; &nbsp; </td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="724">show ()</a></th></tr></table><p> Unhides the element. (sets style.visibility = "visible") </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#268">visible</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#701">hide</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="629">sizeBy ( width, height, growType, steps, speed, fn )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("animate");</span> before can be used!</p><p> Same as <a href="../bin/obj_19.htm#630">sizeTo</a> but sizes are relative to current size. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">width</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> delta &nbsp; </td></tr><tr><td class="nm">height</td><td>integer</td><td class="opt">Y</td><td>&nbsp;</td><td> delta &nbsp; </td></tr><tr><td class="nm">growType</td><td>integer</td><td class="opt">&nbsp;</td><td>3&nbsp;</td><td> 1 = slow-to-fast<br /> 2 = fast-to-slow<br /> 3 = linear<br /> &nbsp; </td></tr><tr><td class="nm">steps</td><td>integer</td><td class="opt">&nbsp;</td><td>50&nbsp;</td><td> number of steps to make during sizing &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>20&nbsp;</td><td> time in ms to wait between steps &nbsp; </td></tr><tr><td class="nm">fn</td><td>Function</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Optional function to call upon completion &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#630">sizeTo</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#713">setH</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#717">setSize</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#718">setSizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#720">setW</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="630">sizeTo ( width, height, growType, steps, speed, fn )</a></th></tr></table><p class="requiredFile">Requires <span class="inlinecode">core.loadUnit("animate");</span> before can be used!</p><p> This method sizes an element to a given shape in timed increments. </p><h5>Parameters:</h5><table cellpadding="2" cellspacing="0" border="0" class="paramTable"><tr><th>Parameter</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr><tr><td class="nm">width</td><td>integer</td><td class="opt">&nbsp;</td><td>current width&nbsp;</td><td> final width &nbsp; </td></tr><tr><td class="nm">height</td><td>integer</td><td class="opt">&nbsp;</td><td>current height&nbsp;</td><td> final height &nbsp; </td></tr><tr><td class="nm">growType</td><td>integer</td><td class="opt">&nbsp;</td><td>3&nbsp;</td><td> 1 = slow-to-fast<br /> 2 = fast-to-slow<br /> 3 = linear<br /> &nbsp; </td></tr><tr><td class="nm">steps</td><td>integer</td><td class="opt">&nbsp;</td><td>50&nbsp;</td><td> number of steps to make during sizing &nbsp; </td></tr><tr><td class="nm">speed</td><td>integer</td><td class="opt">&nbsp;</td><td>20&nbsp;</td><td> time in ms to wait between steps &nbsp; </td></tr><tr><td class="nm">fn</td><td>Function</td><td class="opt">&nbsp;</td><td>&nbsp;</td><td> Optional function to call upon completion &nbsp; </td></tr></table><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#629">sizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#713">setH</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#717">setSize</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#718">setSizeBy</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#720">setW</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="268">visible ()</a></th><td>type : boolean</td><td>default value : true</td></tr></table><p> Returns whether or not the item is visible or hidden. (style.visibility == "visible") </p><table cellpadding="0" cellspacing="0" border="0"><tr><td>See also:&nbsp;</td><td><a href="obj.htm?obj_id=19#701">hide</a></td></tr><tr><td>&nbsp;</td><td><a href="obj.htm?obj_id=19#724">show</a></td></tr></table></div><a href="#contents">back to top</a><div class="prop_group_title">Properties</div><div class="prop_block"><table class="prop_table" border="0" cellpadding="0" cellspacing="0"><tr><th><a name="389">DA_TYPE</a></th><td>type : String</td></tr></table><p> Element type.<br /> Standard ones will have a value of "ELM", while components will usually report their component name. For instance, a Button component has a <span class="inlinecode">DA_TYPE</span> of "BUTTON". For components, the element will usually have a matching CSS classname, prepended with "DA_". For example, the classname of a button will contain <span class="inlinecode">DA_BUTTON</span>. </p><h5>Example:</h5><pre class="code">
alert(elm1.DA_TYPE);</pre></div><a href="#contents">back to top</a><hr />  </body></html>
